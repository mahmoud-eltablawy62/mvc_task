// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using campany.Models;

#nullable disable

namespace campany.Migrations
{
    [DbContext(typeof(campanyContext))]
    [Migration("20230802201723_v7")]
    partial class v7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("campany.Models.Emp_projects", b =>
                {
                    b.Property<int>("Emp_id")
                        .HasColumnType("int");

                    b.Property<int>("proj_id")
                        .HasColumnType("int");

                    b.Property<int>("W_hours")
                        .HasColumnType("int");

                    b.HasKey("Emp_id", "proj_id");

                    b.HasIndex("proj_id");

                    b.ToTable("Employees_projects");
                });

            modelBuilder.Entity("campany.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("office_ID")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salary")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("office_ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("campany.Models.office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Office");
                });

            modelBuilder.Entity("campany.Models.project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("campany.Models.Emp_projects", b =>
                {
                    b.HasOne("campany.Models.Employee", "employees")
                        .WithMany("Emp")
                        .HasForeignKey("Emp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("campany.Models.project", "project")
                        .WithMany()
                        .HasForeignKey("proj_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employees");

                    b.Navigation("project");
                });

            modelBuilder.Entity("campany.Models.Employee", b =>
                {
                    b.HasOne("campany.Models.office", "Off")
                        .WithMany("Employees")
                        .HasForeignKey("office_ID");

                    b.Navigation("Off");
                });

            modelBuilder.Entity("campany.Models.Employee", b =>
                {
                    b.Navigation("Emp");
                });

            modelBuilder.Entity("campany.Models.office", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
